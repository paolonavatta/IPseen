#!/bin/bash
# IPseen v0.1.0

get_private_ipv4() {
    hostname -I | tr ' ' '\n' | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1
}

get_private_ipv6() {
    ip -6 addr show scope global | grep 'inet6' | awk '{print $2}' | cut -d/ -f1 | head -n1
}

get_public_ipv4() {
    curl -s https://ipinfo.io/ip
}

get_public_ipv6() {
    local iface
    iface=$(ip -6 route show default 2>/dev/null | awk '/default/ {print $5}' | head -n1)
    if [ -n "$iface" ]; then
        curl -s --interface "$iface" https://ifconfig.co/ip 2>/dev/null
    fi
}

print_ip() {
    local label="$1"
    local ip="$2"
    if [ -n "$ip" ]; then
        printf "\033[1m%s:\033[0m %s\n" "$label" "$ip"
    fi
}

print_help() {
    printf "%-16s %s\n" "IPseen" "Show Private, Public and MAC Addresses"
    echo ""
    printf "%-16s %s\n" "IPseen --help" "Show this help command"
    printf "%-16s %s\n" "IPseen --version" "Show the current IPseen version"
    printf "%-16s %s\n" "IPseen --public" "Show your Public IPv4 and IPv6 Addresses"
    printf "%-16s %s\n" "IPseen --private" "Show your Private IPv4 and IPv6 Addresses"
    printf "%-16s %s\n" "IPseen --mac" "Show your MAC Address"
}

if [ "$1" = "--mac" ]; then
    mac_addr=$(ip link show | awk '/ether/ {print $2}' | head -n1)
    print_ip "MAC Address" "$mac_addr"
elif [ "$1" = "--private" ]; then
    print_ip "Private IPv4 Address" "$(get_private_ipv4)"
    print_ip "Private IPv6 Address" "$(get_private_ipv6)"
elif [ "$1" = "--public" ]; then
    print_ip "Public IPv4 Address" "$(get_public_ipv4)"
    print_ip "Public IPv6 Address" "$(get_public_ipv6)"
elif [ "$1" = "--version" ]; then
    echo "IPseen v0.1.0"
elif [ "$1" = "--help" ]; then
    print_help
else
    print_ip "Private IPv4 Address" "$(get_private_ipv4)"
    print_ip "Private IPv6 Address" "$(get_private_ipv6)"
    print_ip "Public IPv4 Address" "$(get_public_ipv4)"
    print_ip "Public IPv6 Address" "$(get_public_ipv6)"
    print_ip "MAC Address" "$(ip link show | awk '/ether/ {print $2}' | head -n1)"
fi
